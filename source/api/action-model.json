{
   "id": 636,
   "name": "\"action/action.model.d\"",
   "kind": 1,
   "kindString": "External module",
   "flags": {
      "isExported": true
   },
   "originalName": "C:/Projects/qgrid/doc/node_modules/ng2-qgrid/core/action/action.model.d.ts",
   "children": [
      {
         "id": 637,
         "name": "ActionModel",
         "kind": 256,
         "kindString": "Interface",
         "flags": {
            "isExported": true
         },
         "comment": {
            "shortText": "Use this class to handle and visualize custom user behaviors.\n[action bar](/doc/feature/action.html) plugin uses this model to draw buttons on the top of q-grid to execute user commands.",
            "text": "### Usage\n\n```javascript\nconst addRowCommand = new qgrid.Command({\n  execute: () => {\n     const newRow = {\n\t\t id: 1,\n\t\t text: 'foo'\n     };\n\n     gridModel.data({\n       rows: gridModel.data().rows.concat(newRow)\n     });\n  },\n  shortcut: 'F7'\n});\n\nconst addRowAction = new qgrid.Action({\n   command: addRowCommand,\n   title: 'Add new row',\n   icon: 'add'\n});\n\ngridModel.action({\n   items: [addRowAction]\n});\n```\n\n### Suggested Links\n\n* [Action](/doc/api/action.html)\n* [Command](/doc/api/command.html)\n* [Action Bar](/doc/feature/action.html)\n* [Shortcut](/doc/api/shortcut.html)\n* [Command Manager](/doc/api/command-manager.html)\n"
         },
         "children": [
            {
               "id": 639,
               "name": "items",
               "kind": 1024,
               "kindString": "Property",
               "flags": {
                  "isExported": true,
                  "isOptional": true
               },
               "comment": {
                  "shortText": "List of actions that will be added to the command manager,\nand bind to the keyboard events."
               },
               "sources": [
                  {
                     "fileName": "action/action.model.d.ts",
                     "line": 53,
                     "character": 6
                  }
               ],
               "type": {
                  "type": "array",
                  "elementType": {
                     "type": "reference",
                     "name": "Action",
                     "id": 45
                  }
               }
            },
            {
               "id": 641,
               "name": "manager",
               "kind": 1024,
               "kindString": "Property",
               "flags": {
                  "isExported": true,
                  "isOptional": true
               },
               "comment": {
                  "shortText": "Command manager is responsible for 2 questions:\n* What commands can be executed?\n* How/in what order commands should be executed?"
               },
               "sources": [
                  {
                     "fileName": "action/action.model.d.ts",
                     "line": 65,
                     "character": 8
                  }
               ],
               "type": {
                  "type": "reference",
                  "name": "CommandManager",
                  "id": 568
               }
            },
            {
               "id": 638,
               "name": "resource",
               "kind": 1024,
               "kindString": "Property",
               "flags": {
                  "isExported": true,
                  "isOptional": true
               },
               "sources": [
                  {
                     "fileName": "action/action.model.d.ts",
                     "line": 47,
                     "character": 9
                  }
               ],
               "type": {
                  "type": "reference",
                  "name": "Resource",
                  "id": 204
               }
            },
            {
               "id": 640,
               "name": "shortcut",
               "kind": 1024,
               "kindString": "Property",
               "flags": {
                  "isExported": true,
                  "isOptional": true
               },
               "comment": {
                  "shortText": "The service that connects keyboard events and commands."
               },
               "sources": [
                  {
                     "fileName": "action/action.model.d.ts",
                     "line": 58,
                     "character": 9
                  }
               ],
               "type": {
                  "type": "reference",
                  "name": "Shortcut",
                  "id": 598
               }
            }
         ],
         "groups": [
            {
               "title": "Properties",
               "kind": 1024,
               "children": [
                  639,
                  641,
                  638,
                  640
               ]
            }
         ],
         "sources": [
            {
               "fileName": "action/action.model.d.ts",
               "line": 46,
               "character": 36
            }
         ]
      }
   ],
   "groups": [
      {
         "title": "Interfaces",
         "kind": 256,
         "children": [
            637
         ]
      }
   ],
   "sources": [
      {
         "fileName": "action/action.model.d.ts",
         "line": 1,
         "character": 0
      }
   ],
   "order": 1
}