{
   "id": 87,
   "name": "\"column-type/column.model.d\"",
   "kind": 1,
   "kindString": "External module",
   "flags": {
      "isExported": true
   },
   "originalName": "C:/Projects/qgrid/doc/node_modules/ng2-qgrid/core/core/column-type/column.model.d.ts",
   "children": [
      {
         "id": 88,
         "name": "ColumnModel",
         "kind": 128,
         "kindString": "Class",
         "flags": {
            "isExported": true
         },
         "comment": {
            "shortText": "A class that represents any column in the q-grid.",
            "text": "### Usage\n\n``` javascript\ngridModel.data({\n   columns: [\n   {\n\t     key: 'id',\n\t  \t title: 'ID',\n\t\t type: 'id',\n\t\t editor: 'number'\n\t  },\n   {\n\t     key: 'avatar',\n\t\t title: 'Avatar',\n\t\t type: 'image',\n\t\t width: 80,\n\t\t value: (item, value) => isUndef(value) ? item.avatar : item.avatar = value,\n\t\t labelPath: 'avatarFileName'\n\t  },\n\t  {\n\t     key: 'name.last',\n\t\t title: 'Last Name',\n\t\t type: 'text',\n\t\t path: 'name.last'\n\t  },\n\t  {\n\t     key: 'gender',\n\t\t title: 'Gender',\n\t\t type: 'text',\n\t\t value: (item, value) => isUndef(value) ? item.gender : item.gender = value,\n\t\t editor: 'dropdown',\n\t\t editorOptions: {\n\t\t    fetch: ['female', 'male']\n\t\t }\n\t  },\n\t  {\n\t     key: 'birthday',\n\t\t title: 'Birthday',\n\t\t type: 'date'\n\t  },\n\t  {\n\t     key: 'comment',\n\t\t title: 'Comment',\n\t\t type: 'text',\n\t\t editor: 'text-area',\n\t\t width: 200,\n\t\t maxLength: 8000\n\t  },\n\t  {\n\t\t key: 'password',\n\t\t title: 'Password',\n\t\t type: 'password',\n\t\t isDefault: false\n\t  },\n\t  {\n\t     key: 'teammates',\n\t\t title: 'Teammates',\n\t\t type: 'reference',\n\t\t editorOptions: {\n\t\t    modelFactory: () => {\n\t\t\t   const model = qgrid.model();\n\t\t\t   model\n               .selection({\n\t\t\t         mode: 'multiple',\n\t\t\t\t     unit: 'row'\n\t\t\t      })\n\t\t\t\t  .columnList({\n\t\t\t\t     generation: 'deep'\n\t\t\t\t  })\n\t\t\t\t  .data({\n\t\t\t\t     rows: ctrl.rows\n\t\t\t\t  });\n\n\t\t\t      return model;\n\t\t\t   }\n\t\t\t}\n\t\t},\n\t\t{\n\t\t   key: 'contact.address.zip',\n\t\t   title: 'Zip',\n\t\t   type: 'number',\n\t\t   path: 'contact.address.zip',\n\t\t   width: 70,\n\t\t   isDefault: false\n\t\t},\n\t\t{\n\t\t   key: 'contact.phone',\n\t\t   title: 'Contact Phones',\n\t\t   type: 'array',\n\t\t   path: 'contact.phone',\n\t\t   width: 250\n\t\t},\n\t\t{\n\t\t   key: 'contact.email.primary',\n\t\t   title: 'Primary Email',\n        type: 'email'\n     },\n\t\t{\n\t\t\tkey: 'contact.email.secondary',\n\t\t\ttitle: 'Secondary Email',\n\t\t\ttype: 'email',\n\t\t\teditor: 'autocomplete',\n\t\t\teditorOptions: {\n               fetch: (item, d, search = '') =>\n                   new Promise(resolve => resolve(['foo@bar.ru']))\n\t\t\t}\n\t\t},\n\t\t{\n\t\t   key: 'salary',\n\t\t   title: 'Salary',\n\t\t   type: 'currency'\n\t\t}\n\t\t{\n\t\t   key: 'modifiedTime',\n\t\t   title: 'Modified Time',\n\t\t   type: 'time'\n\t\t},\n\t\t{\n\t\t   key: 'webPage',\n\t\t   title: 'Web Page',\n\t\t   type: 'url'\n\t\t},\n\t\t{\n\t\t   key: 'attachment',\n\t\t   title: 'Attachment',\n\t\t   type: 'file'\n\t\t},\n\t\t{\n\t\t   key: 'isOnline',\n\t\t   title: 'Online',\n\t       type: 'bool'\n\t\t}]\n});\n```\n\n### Suggested Links\n\n* [value.js](https://github.com/qgrid/ng2/blob/master/core/services/value.js)\n* [label.js](https://github.com/qgrid/ng2/blob/master/core/services/label.js)\n* [column.pipe.js](https://github.com/qgrid/ng2/blob/master/core/pipe/column.pipe.js)\n"
         },
         "children": [
            {
               "id": 135,
               "name": "$label",
               "kind": 1024,
               "kindString": "Property",
               "flags": {
                  "isExported": true,
                  "isOptional": true
               },
               "sources": [
                  {
                     "fileName": "column-type/column.model.d.ts",
                     "line": 338,
                     "character": 7
                  }
               ],
               "type": {
                  "type": "reflection",
                  "declaration": {
                     "id": 136,
                     "name": "__type",
                     "kind": 65536,
                     "kindString": "Type literal",
                     "flags": {},
                     "signatures": [
                        {
                           "id": 137,
                           "name": "__call",
                           "kind": 4096,
                           "kindString": "Call signature",
                           "flags": {},
                           "parameters": [
                              {
                                 "id": 138,
                                 "name": "row",
                                 "kind": 32768,
                                 "kindString": "Parameter",
                                 "flags": {},
                                 "type": {
                                    "type": "intrinsic",
                                    "name": "any"
                                 }
                              },
                              {
                                 "id": 139,
                                 "name": "value",
                                 "kind": 32768,
                                 "kindString": "Parameter",
                                 "flags": {
                                    "isOptional": true
                                 },
                                 "type": {
                                    "type": "intrinsic",
                                    "name": "any"
                                 }
                              }
                           ],
                           "type": {
                              "type": "union",
                              "types": [
                                 {
                                    "type": "intrinsic",
                                    "name": "any"
                                 },
                                 {
                                    "type": "intrinsic",
                                    "name": "any"
                                 }
                              ]
                           }
                        }
                     ],
                     "sources": [
                        {
                           "fileName": "column-type/column.model.d.ts",
                           "line": 338,
                           "character": 9
                        }
                     ]
                  }
               }
            },
            {
               "id": 97,
               "name": "$value",
               "kind": 1024,
               "kindString": "Property",
               "flags": {
                  "isExported": true,
                  "isOptional": true
               },
               "sources": [
                  {
                     "fileName": "column-type/column.model.d.ts",
                     "line": 194,
                     "character": 7
                  }
               ],
               "type": {
                  "type": "reflection",
                  "declaration": {
                     "id": 98,
                     "name": "__type",
                     "kind": 65536,
                     "kindString": "Type literal",
                     "flags": {},
                     "signatures": [
                        {
                           "id": 99,
                           "name": "__call",
                           "kind": 4096,
                           "kindString": "Call signature",
                           "flags": {},
                           "parameters": [
                              {
                                 "id": 100,
                                 "name": "row",
                                 "kind": 32768,
                                 "kindString": "Parameter",
                                 "flags": {},
                                 "type": {
                                    "type": "intrinsic",
                                    "name": "any"
                                 }
                              },
                              {
                                 "id": 101,
                                 "name": "value",
                                 "kind": 32768,
                                 "kindString": "Parameter",
                                 "flags": {
                                    "isOptional": true
                                 },
                                 "type": {
                                    "type": "intrinsic",
                                    "name": "any"
                                 }
                              }
                           ],
                           "type": {
                              "type": "intrinsic",
                              "name": "any"
                           }
                        }
                     ],
                     "sources": [
                        {
                           "fileName": "column-type/column.model.d.ts",
                           "line": 194,
                           "character": 9
                        }
                     ]
                  }
               }
            },
            {
               "id": 114,
               "name": "canEdit",
               "kind": 1024,
               "kindString": "Property",
               "flags": {
                  "isExported": true,
                  "isOptional": true
               },
               "comment": {
                  "shortText": "Indicates if cells in the column are editable."
               },
               "sources": [
                  {
                     "fileName": "column-type/column.model.d.ts",
                     "line": 272,
                     "character": 8
                  }
               ],
               "type": {
                  "type": "intrinsic",
                  "name": "boolean"
               }
            },
            {
               "id": 118,
               "name": "canFilter",
               "kind": 1024,
               "kindString": "Property",
               "flags": {
                  "isExported": true,
                  "isOptional": true
               },
               "comment": {
                  "shortText": "Indicates if data in the column can be filtered.\n`Column filter` plugin is used this property to enable/disable filter icon."
               },
               "sources": [
                  {
                     "fileName": "column-type/column.model.d.ts",
                     "line": 294,
                     "character": 10
                  }
               ],
               "type": {
                  "type": "intrinsic",
                  "name": "boolean"
               }
            },
            {
               "id": 120,
               "name": "canFocus",
               "kind": 1024,
               "kindString": "Property",
               "flags": {
                  "isExported": true,
                  "isOptional": true
               },
               "comment": {
                  "shortText": "Indicates if column cells can take focus."
               },
               "sources": [
                  {
                     "fileName": "column-type/column.model.d.ts",
                     "line": 304,
                     "character": 9
                  }
               ],
               "type": {
                  "type": "intrinsic",
                  "name": "boolean"
               }
            },
            {
               "id": 119,
               "name": "canHighlight",
               "kind": 1024,
               "kindString": "Property",
               "flags": {
                  "isExported": true,
                  "isOptional": true
               },
               "comment": {
                  "shortText": "Indicates if underneath column cells should be highlighted when mouse is over column header."
               },
               "sources": [
                  {
                     "fileName": "column-type/column.model.d.ts",
                     "line": 299,
                     "character": 13
                  }
               ],
               "type": {
                  "type": "intrinsic",
                  "name": "boolean"
               }
            },
            {
               "id": 117,
               "name": "canMove",
               "kind": 1024,
               "kindString": "Property",
               "flags": {
                  "isExported": true,
                  "isOptional": true
               },
               "comment": {
                  "shortText": "Indicates if drang and drop is allowed for the column."
               },
               "sources": [
                  {
                     "fileName": "column-type/column.model.d.ts",
                     "line": 288,
                     "character": 8
                  }
               ],
               "type": {
                  "type": "intrinsic",
                  "name": "boolean"
               }
            },
            {
               "id": 115,
               "name": "canResize",
               "kind": 1024,
               "kindString": "Property",
               "flags": {
                  "isExported": true,
                  "isOptional": true
               },
               "comment": {
                  "shortText": "Indicates if column is resizable."
               },
               "sources": [
                  {
                     "fileName": "column-type/column.model.d.ts",
                     "line": 277,
                     "character": 10
                  }
               ],
               "type": {
                  "type": "intrinsic",
                  "name": "boolean"
               }
            },
            {
               "id": 116,
               "name": "canSort",
               "kind": 1024,
               "kindString": "Property",
               "flags": {
                  "isExported": true,
                  "isOptional": true
               },
               "comment": {
                  "shortText": "Indicates if sorting can be applied to the column.\n`Column sort` plugin is used this property to enable/disable sort arrow icons."
               },
               "sources": [
                  {
                     "fileName": "column-type/column.model.d.ts",
                     "line": 283,
                     "character": 8
                  }
               ],
               "type": {
                  "type": "intrinsic",
                  "name": "boolean"
               }
            },
            {
               "id": 134,
               "name": "children",
               "kind": 1024,
               "kindString": "Property",
               "flags": {
                  "isExported": true,
                  "isOptional": true
               },
               "comment": {
                  "shortText": "If children property is setup the column automatically becomes a group container."
               },
               "sources": [
                  {
                     "fileName": "column-type/column.model.d.ts",
                     "line": 336,
                     "character": 9
                  }
               ],
               "type": {
                  "type": "array",
                  "elementType": {
                     "type": "reference",
                     "name": "ColumnModel",
                     "id": 88
                  }
               }
            },
            {
               "id": 106,
               "name": "class",
               "kind": 1024,
               "kindString": "Property",
               "flags": {
                  "isExported": true,
                  "isOptional": true
               },
               "comment": {
                  "shortText": "A functional type of a the column.",
                  "text": " * `'control'` behavior controllers (e.g. `select` type column).\n * `'data'` real user data.\n * `'markup'` used for the internal markup needs (e.g. `pad` type column).\n * `'pivot'`multi head pivot.\n"
               },
               "sources": [
                  {
                     "fileName": "column-type/column.model.d.ts",
                     "line": 229,
                     "character": 6
                  }
               ],
               "type": {
                  "type": "union",
                  "types": [
                     {
                        "type": "stringLiteral",
                        "value": "data"
                     },
                     {
                        "type": "stringLiteral",
                        "value": "control"
                     },
                     {
                        "type": "stringLiteral",
                        "value": "markup"
                     },
                     {
                        "type": "stringLiteral",
                        "value": "pivot"
                     }
                  ]
               }
            },
            {
               "id": 129,
               "name": "compare",
               "kind": 1024,
               "kindString": "Property",
               "flags": {
                  "isExported": true,
                  "isOptional": true
               },
               "comment": {
                  "shortText": "This function is used by `column sort` pipe to order row values."
               },
               "sources": [
                  {
                     "fileName": "column-type/column.model.d.ts",
                     "line": 331,
                     "character": 8
                  }
               ],
               "type": {
                  "type": "reflection",
                  "declaration": {
                     "id": 130,
                     "name": "__type",
                     "kind": 65536,
                     "kindString": "Type literal",
                     "flags": {},
                     "signatures": [
                        {
                           "id": 131,
                           "name": "__call",
                           "kind": 4096,
                           "kindString": "Call signature",
                           "flags": {},
                           "parameters": [
                              {
                                 "id": 132,
                                 "name": "x",
                                 "kind": 32768,
                                 "kindString": "Parameter",
                                 "flags": {},
                                 "type": {
                                    "type": "intrinsic",
                                    "name": "any"
                                 }
                              },
                              {
                                 "id": 133,
                                 "name": "y",
                                 "kind": 32768,
                                 "kindString": "Parameter",
                                 "flags": {},
                                 "type": {
                                    "type": "intrinsic",
                                    "name": "any"
                                 }
                              }
                           ],
                           "type": {
                              "type": "intrinsic",
                              "name": "number"
                           }
                        }
                     ],
                     "sources": [
                        {
                           "fileName": "column-type/column.model.d.ts",
                           "line": 331,
                           "character": 10
                        }
                     ]
                  }
               }
            },
            {
               "id": 107,
               "name": "editor",
               "kind": 1024,
               "kindString": "Property",
               "flags": {
                  "isExported": true,
                  "isOptional": true
               },
               "comment": {
                  "shortText": "Editor type, will be shown in cell edit mode instead of default column type editor.\nFor instance, it can be used for id type column `<q-grid-column type=\"id\" editor=\"number\">`"
               },
               "sources": [
                  {
                     "fileName": "column-type/column.model.d.ts",
                     "line": 235,
                     "character": 7
                  }
               ],
               "type": {
                  "type": "intrinsic",
                  "name": "string"
               }
            },
            {
               "id": 108,
               "name": "editorOptions",
               "kind": 1024,
               "kindString": "Property",
               "flags": {
                  "isExported": true,
                  "isOptional": true
               },
               "comment": {
                  "shortText": "Options for cell edit mode."
               },
               "sources": [
                  {
                     "fileName": "column-type/column.model.d.ts",
                     "line": 240,
                     "character": 14
                  }
               ],
               "type": {
                  "type": "reference",
                  "name": "EditorOptions",
                  "id": 57
               }
            },
            {
               "id": 122,
               "name": "index",
               "kind": 1024,
               "kindString": "Property",
               "flags": {
                  "isExported": true,
                  "isOptional": true
               },
               "comment": {
                  "shortText": "Indicates the order of the column."
               },
               "sources": [
                  {
                     "fileName": "column-type/column.model.d.ts",
                     "line": 314,
                     "character": 6
                  }
               ],
               "type": {
                  "type": "intrinsic",
                  "name": "number"
               }
            },
            {
               "id": 121,
               "name": "isVisible",
               "kind": 1024,
               "kindString": "Property",
               "flags": {
                  "isExported": true,
                  "isOptional": true
               },
               "comment": {
                  "shortText": "Indicates if column is visible or not."
               },
               "sources": [
                  {
                     "fileName": "column-type/column.model.d.ts",
                     "line": 309,
                     "character": 10
                  }
               ],
               "type": {
                  "type": "intrinsic",
                  "name": "boolean"
               }
            },
            {
               "id": 90,
               "name": "key",
               "kind": 1024,
               "kindString": "Property",
               "flags": {
                  "isExported": true,
                  "isOptional": true
               },
               "comment": {
                  "shortText": "Column identifier, should be unique across all columns. If path is not setup, key property is used\nto retrieve a cell value."
               },
               "sources": [
                  {
                     "fileName": "column-type/column.model.d.ts",
                     "line": 182,
                     "character": 4
                  }
               ],
               "type": {
                  "type": "intrinsic",
                  "name": "string"
               }
            },
            {
               "id": 123,
               "name": "label",
               "kind": 1024,
               "kindString": "Property",
               "flags": {
                  "isExported": true,
                  "isOptional": true
               },
               "comment": {
                  "shortText": "Indicates what text should be shown in the cell. If property is not set column value is used.\nAlso `filter plugin` uses this property to show list of items and for filter application."
               },
               "sources": [
                  {
                     "fileName": "column-type/column.model.d.ts",
                     "line": 320,
                     "character": 6
                  }
               ],
               "type": {
                  "type": "reflection",
                  "declaration": {
                     "id": 124,
                     "name": "__type",
                     "kind": 65536,
                     "kindString": "Type literal",
                     "flags": {},
                     "signatures": [
                        {
                           "id": 125,
                           "name": "__call",
                           "kind": 4096,
                           "kindString": "Call signature",
                           "flags": {},
                           "parameters": [
                              {
                                 "id": 126,
                                 "name": "row",
                                 "kind": 32768,
                                 "kindString": "Parameter",
                                 "flags": {},
                                 "type": {
                                    "type": "intrinsic",
                                    "name": "any"
                                 }
                              },
                              {
                                 "id": 127,
                                 "name": "value",
                                 "kind": 32768,
                                 "kindString": "Parameter",
                                 "flags": {
                                    "isOptional": true
                                 },
                                 "type": {
                                    "type": "intrinsic",
                                    "name": "any"
                                 }
                              }
                           ],
                           "type": {
                              "type": "union",
                              "types": [
                                 {
                                    "type": "intrinsic",
                                    "name": "string"
                                 },
                                 {
                                    "type": "intrinsic",
                                    "name": "any"
                                 }
                              ]
                           }
                        }
                     ],
                     "sources": [
                        {
                           "fileName": "column-type/column.model.d.ts",
                           "line": 320,
                           "character": 8
                        }
                     ]
                  }
               }
            },
            {
               "id": 128,
               "name": "labelPath",
               "kind": 1024,
               "kindString": "Property",
               "flags": {
                  "isExported": true,
                  "isOptional": true
               },
               "comment": {
                  "shortText": "Path to the label. Example is `address.phones.0.num`, if `labelPath` property is setup, it is used\nto get/set cell label, but it has a lower priority than column `label property."
               },
               "sources": [
                  {
                     "fileName": "column-type/column.model.d.ts",
                     "line": 326,
                     "character": 10
                  }
               ],
               "type": {
                  "type": "intrinsic",
                  "name": "string"
               }
            },
            {
               "id": 111,
               "name": "maxWidth",
               "kind": 1024,
               "kindString": "Property",
               "flags": {
                  "isExported": true,
                  "isOptional": true
               },
               "comment": {
                  "shortText": "Maximum width of the column."
               },
               "sources": [
                  {
                     "fileName": "column-type/column.model.d.ts",
                     "line": 260,
                     "character": 9
                  }
               ],
               "type": {
                  "type": "intrinsic",
                  "name": "number"
               }
            },
            {
               "id": 110,
               "name": "minWidth",
               "kind": 1024,
               "kindString": "Property",
               "flags": {
                  "isExported": true,
                  "isOptional": true
               },
               "comment": {
                  "shortText": "Minimal width of the column."
               },
               "sources": [
                  {
                     "fileName": "column-type/column.model.d.ts",
                     "line": 255,
                     "character": 9
                  }
               ],
               "type": {
                  "type": "intrinsic",
                  "name": "number"
               }
            },
            {
               "id": 104,
               "name": "origin",
               "kind": 1024,
               "kindString": "Property",
               "flags": {
                  "isExported": true,
                  "isOptional": true
               },
               "sources": [
                  {
                     "fileName": "column-type/column.model.d.ts",
                     "line": 210,
                     "character": 7
                  }
               ],
               "type": {
                  "type": "intrinsic",
                  "name": "string"
               }
            },
            {
               "id": 102,
               "name": "path",
               "kind": 1024,
               "kindString": "Property",
               "flags": {
                  "isExported": true,
                  "isOptional": true
               },
               "comment": {
                  "shortText": "Path to the value. Example is `address.phones.0.num`, if `path` property is setup, it is used\nto get/set cell value, but it has a lower priority than column `value` property."
               },
               "sources": [
                  {
                     "fileName": "column-type/column.model.d.ts",
                     "line": 200,
                     "character": 5
                  }
               ],
               "type": {
                  "type": "intrinsic",
                  "name": "string"
               }
            },
            {
               "id": 103,
               "name": "pin",
               "kind": 1024,
               "kindString": "Property",
               "flags": {
                  "isExported": true,
                  "isOptional": true
               },
               "comment": {
                  "shortText": "Indicates if column should be frozen.\n- `'left'` - freeze a column to the grid's left.\n- `'right'` - freeze a column to the grids'right.\n- `null` - do not freeze  a column."
               },
               "sources": [
                  {
                     "fileName": "column-type/column.model.d.ts",
                     "line": 208,
                     "character": 4
                  }
               ],
               "type": {
                  "type": "union",
                  "types": [
                     {
                        "type": "intrinsic",
                        "name": "null"
                     },
                     {
                        "type": "stringLiteral",
                        "value": "left"
                     },
                     {
                        "type": "stringLiteral",
                        "value": "right"
                     }
                  ]
               }
            },
            {
               "id": 105,
               "name": "source",
               "kind": 1024,
               "kindString": "Property",
               "flags": {
                  "isExported": true,
                  "isOptional": true
               },
               "comment": {
                  "shortText": "Place where a column was created.",
                  "text": "* `'generation'` was auto-generated by the q-grid.\n* `'template'` was defined by user in the html template.\n* `'user'` was defined by user in the javascript/typescript.\n"
               },
               "sources": [
                  {
                     "fileName": "column-type/column.model.d.ts",
                     "line": 219,
                     "character": 7
                  }
               ],
               "type": {
                  "type": "intrinsic",
                  "name": "string"
               }
            },
            {
               "id": 91,
               "name": "title",
               "kind": 1024,
               "kindString": "Property",
               "flags": {
                  "isExported": true,
                  "isOptional": true
               },
               "comment": {
                  "shortText": "Column header text, also can be shown as column tooltip, or used in plugins like column filter plugin."
               },
               "sources": [
                  {
                     "fileName": "column-type/column.model.d.ts",
                     "line": 187,
                     "character": 6
                  }
               ],
               "type": {
                  "type": "intrinsic",
                  "name": "string"
               }
            },
            {
               "id": 89,
               "name": "type",
               "kind": 1024,
               "kindString": "Property",
               "flags": {
                  "isExported": true,
                  "isOptional": true
               },
               "comment": {
                  "shortText": "Type of column. Beside below list user is free to define own column type.\nBe aware that some column types are used for internal purposes.\n- `array`\n- `bool`\n- `currency`\n- `date`\n- `email`\n- `file`\n- `filter-row`\n- `group`\n- `id`\n- `image`\n- `number`\n- `pad`\n- `pivot`\n- `reference`\n- `row-details`\n- `row-expand`\n- `row-indicator`\n- `row-number`\n- `row-options`\n- `select`\n- `summary`\n- `text`\n- `time`\n- `url`"
               },
               "sources": [
                  {
                     "fileName": "column-type/column.model.d.ts",
                     "line": 176,
                     "character": 5
                  }
               ],
               "type": {
                  "type": "intrinsic",
                  "name": "string"
               }
            },
            {
               "id": 92,
               "name": "value",
               "kind": 1024,
               "kindString": "Property",
               "flags": {
                  "isExported": true,
                  "isOptional": true
               },
               "comment": {
                  "shortText": "Getter, setter for a cell value. If the value property is setup, it is used to get/set cell value."
               },
               "sources": [
                  {
                     "fileName": "column-type/column.model.d.ts",
                     "line": 192,
                     "character": 6
                  }
               ],
               "type": {
                  "type": "reflection",
                  "declaration": {
                     "id": 93,
                     "name": "__type",
                     "kind": 65536,
                     "kindString": "Type literal",
                     "flags": {},
                     "signatures": [
                        {
                           "id": 94,
                           "name": "__call",
                           "kind": 4096,
                           "kindString": "Call signature",
                           "flags": {},
                           "parameters": [
                              {
                                 "id": 95,
                                 "name": "row",
                                 "kind": 32768,
                                 "kindString": "Parameter",
                                 "flags": {},
                                 "type": {
                                    "type": "intrinsic",
                                    "name": "any"
                                 }
                              },
                              {
                                 "id": 96,
                                 "name": "value",
                                 "kind": 32768,
                                 "kindString": "Parameter",
                                 "flags": {
                                    "isOptional": true
                                 },
                                 "type": {
                                    "type": "intrinsic",
                                    "name": "any"
                                 }
                              }
                           ],
                           "type": {
                              "type": "intrinsic",
                              "name": "any"
                           }
                        }
                     ],
                     "sources": [
                        {
                           "fileName": "column-type/column.model.d.ts",
                           "line": 192,
                           "character": 8
                        }
                     ]
                  }
               }
            },
            {
               "id": 112,
               "name": "viewWidth",
               "kind": 1024,
               "kindString": "Property",
               "flags": {
                  "isExported": true,
                  "isOptional": true
               },
               "comment": {
                  "shortText": "If set, column width will be expanded to this value on focus."
               },
               "sources": [
                  {
                     "fileName": "column-type/column.model.d.ts",
                     "line": 265,
                     "character": 10
                  }
               ],
               "type": {
                  "type": "intrinsic",
                  "name": "number"
               }
            },
            {
               "id": 109,
               "name": "width",
               "kind": 1024,
               "kindString": "Property",
               "flags": {
                  "isExported": true,
                  "isOptional": true
               },
               "comment": {
                  "shortText": "Width of the q-grid column.",
                  "text": "* Can be setup in `pixels` like `<q-grid-column width=\"100\">`.\n* Can be setup in `persents` like `<q-grid-column width=\"20%\"`.\n\nPercents are materialized only once on init, and depend on the q-grid size.\n"
               },
               "sources": [
                  {
                     "fileName": "column-type/column.model.d.ts",
                     "line": 250,
                     "character": 6
                  }
               ],
               "type": {
                  "type": "union",
                  "types": [
                     {
                        "type": "intrinsic",
                        "name": "number"
                     },
                     {
                        "type": "intrinsic",
                        "name": "string"
                     }
                  ]
               }
            },
            {
               "id": 113,
               "name": "widthMode",
               "kind": 1024,
               "kindString": "Property",
               "flags": {
                  "isExported": true,
                  "isOptional": true
               },
               "sources": [
                  {
                     "fileName": "column-type/column.model.d.ts",
                     "line": 267,
                     "character": 10
                  }
               ],
               "type": {
                  "type": "intrinsic",
                  "name": "string"
               }
            }
         ],
         "groups": [
            {
               "title": "Properties",
               "kind": 1024,
               "children": [
                  135,
                  97,
                  114,
                  118,
                  120,
                  119,
                  117,
                  115,
                  116,
                  134,
                  106,
                  129,
                  107,
                  108,
                  122,
                  121,
                  90,
                  123,
                  128,
                  111,
                  110,
                  104,
                  102,
                  103,
                  105,
                  91,
                  89,
                  92,
                  112,
                  109,
                  113
               ]
            }
         ],
         "sources": [
            {
               "fileName": "column-type/column.model.d.ts",
               "line": 147,
               "character": 32
            }
         ],
         "extendedBy": [
            {
               "type": "reference",
               "name": "DataColumnModel",
               "id": 1932
            },
            {
               "type": "reference",
               "name": "CohortColumnModel",
               "id": 2133
            },
            {
               "type": "reference",
               "name": "FilterRowColumnModel",
               "id": 2456
            },
            {
               "type": "reference",
               "name": "GroupColumnModel",
               "id": 2518
            },
            {
               "type": "reference",
               "name": "PadColumnModel",
               "id": 2839
            },
            {
               "type": "reference",
               "name": "PivotColumnModel",
               "id": 2964
            },
            {
               "type": "reference",
               "name": "RowDetailsColumnModel",
               "id": 3090
            },
            {
               "type": "reference",
               "name": "RowExpandColumnModel",
               "id": 3151
            },
            {
               "type": "reference",
               "name": "RowIndicatorColumnModel",
               "id": 3212
            },
            {
               "type": "reference",
               "name": "RowNumberColumnModel",
               "id": 3273
            },
            {
               "type": "reference",
               "name": "SelectColumnModel",
               "id": 3398
            }
         ]
      }
   ],
   "groups": [
      {
         "title": "Classes",
         "kind": 128,
         "children": [
            88
         ]
      }
   ],
   "sources": [
      {
         "fileName": "column-type/column.model.d.ts",
         "line": 1,
         "character": 0
      }
   ],
   "order": 14
}