{
   "id": 420,
   "name": "\"filter/filter.model.d\"",
   "kind": 1,
   "kindString": "External module",
   "flags": {
      "isExported": true
   },
   "originalName": "C:/Projects/qgrid/doc/node_modules/ng2-qgrid/core/filter/filter.model.d.ts",
   "children": [
      {
         "id": 421,
         "name": "FilterModel",
         "kind": 128,
         "kindString": "Class",
         "flags": {
            "isExported": true
         },
         "comment": {
            "shortText": "A class to setup data filters and expressions.",
            "text": "## Usage\n\n```javascript\ngridModel.filter({\n   by: {\n      myTextColumn: {items: ['foo', 'bar']},\n      myNumberColumn: {expression: {\n\t\t    kind: 'group',\n\t\t    op: 'and',\n\t\t    left: {\n\t\t\t   kind: 'condition',\n\t\t\t   left: key,\n\t\t\t   op: 'in',\n\t\t\t   right: ['foo', 'bar']\n\t\t   },\n\t\t   right: null\n\t     }}\n   }\n});\n```\n\n## Suggested Links\n\n* [filter.pipe.js](https://github.com/qgrid/ng2/blob/master/core/pipe/filter.pipe.js)\n"
         },
         "children": [
            {
               "id": 431,
               "name": "assertFactory",
               "kind": 1024,
               "kindString": "Property",
               "flags": {
                  "isExported": true
               },
               "comment": {
                  "shortText": "Factory for assertion unit that contains comparison functions.",
                  "text": "* `equals` should return true if two values are equal\n* `lessThan` should return true if the first value is less than the second.\n* `isNull` should return true if value means null.\n"
               },
               "sources": [
                  {
                     "fileName": "filter/filter.model.d.ts",
                     "line": 69,
                     "character": 14
                  }
               ],
               "type": {
                  "type": "reflection",
                  "declaration": {
                     "id": 432,
                     "name": "__type",
                     "kind": 65536,
                     "kindString": "Type literal",
                     "flags": {},
                     "signatures": [
                        {
                           "id": 433,
                           "name": "__call",
                           "kind": 4096,
                           "kindString": "Call signature",
                           "flags": {},
                           "type": {
                              "type": "reference",
                              "name": "IAssert",
                              "id": 404
                           }
                        }
                     ],
                     "sources": [
                        {
                           "fileName": "filter/filter.model.d.ts",
                           "line": 69,
                           "character": 15
                        }
                     ]
                  }
               }
            },
            {
               "id": 423,
               "name": "by",
               "kind": 1024,
               "kindString": "Property",
               "flags": {
                  "isExported": true
               },
               "comment": {
                  "shortText": "Object that contains filter values, `{columnKey: items | expression}`",
                  "text": "* `items` list of values so when setup works like `in` operator.\n* `expression` and\\or expression\n"
               },
               "sources": [
                  {
                     "fileName": "filter/filter.model.d.ts",
                     "line": 42,
                     "character": 3
                  }
               ],
               "type": {
                  "type": "intrinsic",
                  "name": "object"
               }
            },
            {
               "id": 428,
               "name": "fetch",
               "kind": 1024,
               "kindString": "Property",
               "flags": {
                  "isExported": true
               },
               "comment": {
                  "shortText": "If setup `column filter` plugin can use this property to populate list of column items."
               },
               "sources": [
                  {
                     "fileName": "filter/filter.model.d.ts",
                     "line": 60,
                     "character": 6
                  }
               ],
               "type": {
                  "type": "reflection",
                  "declaration": {
                     "id": 429,
                     "name": "__type",
                     "kind": 65536,
                     "kindString": "Type literal",
                     "flags": {},
                     "signatures": [
                        {
                           "id": 430,
                           "name": "__call",
                           "kind": 4096,
                           "kindString": "Call signature",
                           "flags": {},
                           "type": {
                              "type": "union",
                              "types": [
                                 {
                                    "type": "intrinsic",
                                    "name": "any"
                                 },
                                 {
                                    "type": "reference",
                                    "name": "Promise"
                                 },
                                 {
                                    "type": "intrinsic",
                                    "name": "any"
                                 }
                              ]
                           }
                        }
                     ],
                     "sources": [
                        {
                           "fileName": "filter/filter.model.d.ts",
                           "line": 60,
                           "character": 7
                        }
                     ]
                  }
               }
            },
            {
               "id": 425,
               "name": "match",
               "kind": 1024,
               "kindString": "Property",
               "flags": {
                  "isExported": true
               },
               "comment": {
                  "shortText": "Factory for the match function."
               },
               "sources": [
                  {
                     "fileName": "filter/filter.model.d.ts",
                     "line": 55,
                     "character": 6
                  }
               ],
               "type": {
                  "type": "reflection",
                  "declaration": {
                     "id": 426,
                     "name": "__type",
                     "kind": 65536,
                     "kindString": "Type literal",
                     "flags": {},
                     "signatures": [
                        {
                           "id": 427,
                           "name": "__call",
                           "kind": 4096,
                           "kindString": "Call signature",
                           "flags": {},
                           "type": {
                              "type": "reference",
                              "name": "IMatch",
                              "id": 399
                           }
                        }
                     ],
                     "sources": [
                        {
                           "fileName": "filter/filter.model.d.ts",
                           "line": 55,
                           "character": 7
                        }
                     ]
                  }
               }
            },
            {
               "id": 422,
               "name": "resource",
               "kind": 1024,
               "kindString": "Property",
               "flags": {
                  "isExported": true
               },
               "sources": [
                  {
                     "fileName": "filter/filter.model.d.ts",
                     "line": 34,
                     "character": 9
                  }
               ],
               "type": {
                  "type": "reference",
                  "name": "Resource",
                  "id": 138
               }
            },
            {
               "id": 424,
               "name": "unit",
               "kind": 1024,
               "kindString": "Property",
               "flags": {
                  "isExported": true
               },
               "comment": {
                  "shortText": "Filter representation enum:",
                  "text": "* `default` filtration through column filters and external plugins.\n* `row` filtration through header row filter and external plugins.\n"
               },
               "sources": [
                  {
                     "fileName": "filter/filter.model.d.ts",
                     "line": 50,
                     "character": 5
                  }
               ],
               "type": {
                  "type": "intrinsic",
                  "name": "string"
               }
            }
         ],
         "groups": [
            {
               "title": "Properties",
               "kind": 1024,
               "children": [
                  431,
                  423,
                  428,
                  425,
                  422,
                  424
               ]
            }
         ],
         "sources": [
            {
               "fileName": "filter/filter.model.d.ts",
               "line": 33,
               "character": 32
            }
         ]
      }
   ],
   "groups": [
      {
         "title": "Classes",
         "kind": 128,
         "children": [
            421
         ]
      }
   ],
   "sources": [
      {
         "fileName": "filter/filter.model.d.ts",
         "line": 1,
         "character": 0
      }
   ],
   "order": 95
}