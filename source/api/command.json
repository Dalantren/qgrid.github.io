{
   "id": 24,
   "name": "\"command/command.d\"",
   "kind": 1,
   "kindString": "External module",
   "flags": {
      "isExported": true
   },
   "originalName": "C:/Projects/qgrid/doc/node_modules/ng2-qgrid/core/command/command.d.ts",
   "children": [
      {
         "id": 25,
         "name": "Command",
         "kind": 128,
         "kindString": "Class",
         "flags": {
            "isExported": true
         },
         "comment": {
            "shortText": "Use this class to implement command pattern in the qgrid. The most of interactions in the q-grid are utilized by this pattern.",
            "text": "### Create a command using q-grid facade.\n\n```javascript\n\tconst addRowCommand = new qgrid.Command({\n\t   canExecute: () => true,\n\t   execute: () => {\n\t      const newRow = {\n\t\t\t id: 1,\n\t\t\t text: 'Lorem ipsum dolor sit amet'\n\t      };\n\n\t\t  gridModel.data({\n\t\t\t rows: gridModel.data().rows.concat(newRow)\n\t\t  });\n\t   },\n\t   shortcut: 'F7'\n });\n```\n\n### Suggested Links.\n\n* [Action Model](/doc/api/action-model.html)\n* [Action](/doc/api/action.html)\n* [Service](/doc/api/grid.html)\n* [Command Pattern Wiki](https://en.wikipedia.org/wiki/Command_pattern)\n"
         },
         "typeParameter": [
            {
               "id": 26,
               "name": "T",
               "kind": 131072,
               "kindString": "Type parameter",
               "flags": {}
            }
         ],
         "children": [
            {
               "id": 27,
               "name": "constructor",
               "kind": 512,
               "kindString": "Constructor",
               "flags": {
                  "isExported": true
               },
               "signatures": [
                  {
                     "id": 28,
                     "name": "new Command",
                     "kind": 16384,
                     "kindString": "Constructor signature",
                     "flags": {},
                     "parameters": [
                        {
                           "id": 29,
                           "name": "context",
                           "kind": 32768,
                           "kindString": "Parameter",
                           "flags": {
                              "isOptional": true
                           },
                           "type": {
                              "type": "reference",
                              "name": "CommandContext",
                              "id": 9,
                              "typeArguments": [
                                 {
                                    "type": "typeParameter",
                                    "name": "T"
                                 }
                              ]
                           }
                        }
                     ],
                     "type": {
                        "type": "reference",
                        "name": "Command",
                        "id": 25
                     }
                  }
               ],
               "sources": [
                  {
                     "fileName": "command/command.d.ts",
                     "line": 32,
                     "character": 39
                  }
               ]
            },
            {
               "id": 30,
               "name": "canExecute",
               "kind": 1024,
               "kindString": "Property",
               "flags": {
                  "isExported": true
               },
               "comment": {
                  "shortText": "Indicates if a command can be invoked. Use one argument to support typescript generic typification.\nBy default true value is returned."
               },
               "sources": [
                  {
                     "fileName": "command/command.d.ts",
                     "line": 39,
                     "character": 14
                  }
               ],
               "type": {
                  "type": "reflection",
                  "declaration": {
                     "id": 31,
                     "name": "__type",
                     "kind": 65536,
                     "kindString": "Type literal",
                     "flags": {},
                     "signatures": [
                        {
                           "id": 32,
                           "name": "__call",
                           "kind": 4096,
                           "kindString": "Call signature",
                           "flags": {},
                           "parameters": [
                              {
                                 "id": 33,
                                 "name": "e",
                                 "kind": 32768,
                                 "kindString": "Parameter",
                                 "flags": {
                                    "isOptional": true
                                 },
                                 "type": {
                                    "type": "typeParameter",
                                    "name": "T"
                                 }
                              },
                              {
                                 "id": 34,
                                 "name": "args",
                                 "kind": 32768,
                                 "kindString": "Parameter",
                                 "flags": {
                                    "isRest": true
                                 },
                                 "type": {
                                    "type": "array",
                                    "elementType": {
                                       "type": "intrinsic",
                                       "name": "any"
                                    }
                                 }
                              }
                           ],
                           "type": {
                              "type": "intrinsic",
                              "name": "boolean"
                           }
                        }
                     ],
                     "sources": [
                        {
                           "fileName": "command/command.d.ts",
                           "line": 39,
                           "character": 15
                        }
                     ]
                  }
               }
            },
            {
               "id": 35,
               "name": "execute",
               "kind": 1024,
               "kindString": "Property",
               "flags": {
                  "isExported": true
               },
               "comment": {
                  "shortText": "Invokes the command. Use one argument to support typescript generic typification.\nSometimes interaction model requires to return a value, for example, default command manager\nstops to process next commands if false is returned by the command execute method."
               },
               "sources": [
                  {
                     "fileName": "command/command.d.ts",
                     "line": 46,
                     "character": 11
                  }
               ],
               "type": {
                  "type": "reflection",
                  "declaration": {
                     "id": 36,
                     "name": "__type",
                     "kind": 65536,
                     "kindString": "Type literal",
                     "flags": {},
                     "signatures": [
                        {
                           "id": 37,
                           "name": "__call",
                           "kind": 4096,
                           "kindString": "Call signature",
                           "flags": {},
                           "parameters": [
                              {
                                 "id": 38,
                                 "name": "e",
                                 "kind": 32768,
                                 "kindString": "Parameter",
                                 "flags": {
                                    "isOptional": true
                                 },
                                 "type": {
                                    "type": "typeParameter",
                                    "name": "T"
                                 }
                              },
                              {
                                 "id": 39,
                                 "name": "args",
                                 "kind": 32768,
                                 "kindString": "Parameter",
                                 "flags": {
                                    "isRest": true
                                 },
                                 "type": {
                                    "type": "array",
                                    "elementType": {
                                       "type": "intrinsic",
                                       "name": "any"
                                    }
                                 }
                              }
                           ],
                           "type": {
                              "type": "intrinsic",
                              "name": "any"
                           }
                        }
                     ],
                     "sources": [
                        {
                           "fileName": "command/command.d.ts",
                           "line": 46,
                           "character": 12
                        }
                     ]
                  }
               }
            },
            {
               "id": 41,
               "name": "priority",
               "kind": 1024,
               "kindString": "Property",
               "flags": {
                  "isExported": true,
                  "isOptional": true
               },
               "comment": {
                  "shortText": "Command priority that can be used by command manager to specify order of commands to execute.\nFor example, if several commands have the same shortcut, you may need to see in which order\nthese commands should be executed."
               },
               "sources": [
                  {
                     "fileName": "command/command.d.ts",
                     "line": 64,
                     "character": 12
                  }
               ],
               "type": {
                  "type": "intrinsic",
                  "name": "number"
               }
            },
            {
               "id": 40,
               "name": "shortcut",
               "kind": 1024,
               "kindString": "Property",
               "flags": {
                  "isExported": true,
                  "isOptional": true
               },
               "comment": {
                  "shortText": "A sequence of keyboard key codes to execute the command.\nHere are some examples:",
                  "text": "* shift+a\n* ctrl+s\n* f2\n\n"
               },
               "sources": [
                  {
                     "fileName": "command/command.d.ts",
                     "line": 57,
                     "character": 12
                  }
               ],
               "type": {
                  "type": "intrinsic",
                  "name": "string"
               }
            },
            {
               "id": 43,
               "name": "sink",
               "kind": 1024,
               "kindString": "Property",
               "flags": {
                  "isExported": true,
                  "isOptional": true
               },
               "comment": {
                  "shortText": "If a command is executed by q-grid command manager, the sink value contains\nthe last canExecute result."
               },
               "sources": [
                  {
                     "fileName": "command/command.d.ts",
                     "line": 75,
                     "character": 5
                  }
               ],
               "type": {
                  "type": "intrinsic",
                  "name": "any"
               }
            },
            {
               "id": 42,
               "name": "source",
               "kind": 1024,
               "kindString": "Property",
               "flags": {
                  "isExported": true,
                  "isOptional": true
               },
               "comment": {
                  "shortText": "Idicates an origin of the command."
               },
               "sources": [
                  {
                     "fileName": "command/command.d.ts",
                     "line": 69,
                     "character": 7
                  }
               ],
               "type": {
                  "type": "intrinsic",
                  "name": "string"
               }
            }
         ],
         "groups": [
            {
               "title": "Constructors",
               "kind": 512,
               "children": [
                  27
               ]
            },
            {
               "title": "Properties",
               "kind": 1024,
               "children": [
                  30,
                  35,
                  41,
                  40,
                  43,
                  42
               ]
            }
         ],
         "sources": [
            {
               "fileName": "command/command.d.ts",
               "line": 32,
               "character": 28
            }
         ]
      }
   ],
   "groups": [
      {
         "title": "Classes",
         "kind": 128,
         "children": [
            25
         ]
      }
   ],
   "sources": [
      {
         "fileName": "command/command.d.ts",
         "line": 1,
         "character": 0
      }
   ],
   "order": 44
}